{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","sortedGoodsList","goods","goodsList","sort","good1","good2","localeCompare","getSortedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SA4BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA5BR,SAAwBC,EAAxB,GAAwD,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACpCI,EAAS,YAAOD,GAqBtB,OAnBIL,GACFM,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,OAfD,IAoBVE,GACFI,EAAUJ,UAGLI,EAMiBK,CAAehB,EAAiB,CACtDK,YACAE,YAQF,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAaL,IAC5BkB,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYf,IAAcJ,IANhC,iCAYA,wBACEiB,QAAS,kBAAMZ,EAAaJ,IAC5BiB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYf,IAAcH,IANhC,4BAYEK,EASA,wBACEW,QAAS,kBAAMV,GAAW,IAC1BW,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAwB,IAAZb,IANlB,qBARA,wBACEW,QAAS,kBAAMV,EArEX,OAsEJW,KAAK,SACLF,UAAU,6BAHZ,sBAqBAZ,GAAaE,IACb,wBACEW,QAxDI,WACZZ,EAAa,IACbE,GAAW,IAuDHW,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGR,EAAgBY,KAAI,SAAAC,GAAI,OACvB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.35be1b5b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\nconst REVERSE = true;\n\nfunction getSortedGoods(goods, { sortField, reverse }) {\n  const goodsList = [...goods];\n\n  if (sortField) {\n    goodsList.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse === REVERSE) {\n    goodsList.reverse();\n  }\n\n  return goodsList;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const sortedGoodsList = getSortedGoods(goodsFromServer, {\n    sortField,\n    reverse,\n  });\n\n  const reset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        {!reverse ? (\n          <button\n            onClick={() => setReverse(REVERSE)}\n            type=\"button\"\n            className=\"button is-warning is-light\"\n          >\n            Reverse\n          </button>\n        ) : (\n          <button\n            onClick={() => setReverse(false)}\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              { 'is-light': reverse !== true },\n            )}\n          >\n            Reverse\n          </button>\n        )}\n\n        {(sortField || reverse) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoodsList.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}